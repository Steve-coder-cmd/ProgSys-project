  float*B = malloc(dim * sizeof(int));  		// vecteur B
    float *X = malloc(dim * sizeof(float)); 	// solution X

    float *P = malloc(dim * sizeof(int));      //pivot pi

    // matrice A (exemple donn√©)
    A[0][0] = 4; A[0][1] = 8; A[0][2] = 12;
    A[1][0] = 3; A[1][1] = 8; A[1][2] = 13;
    A[2][0] = 2; A[2][1] = 9; A[2][2] = 18;

    // vecteur B
    B[0] = 4;
    B[1] = 5;
    B[2] = 11;

    printf("avant triangularisation :\n");
    displayResult(dim, A, B);

 
    triangularisation(dim, A, B);

 
    resolution(dim, A, B, X);

        printf("\nSolution du systeme :\n");
    for (int i = 0; i < dim; i++) {
        printf("x[%d] = %.2f\n", i, X[i]);
    }

    
    for (int i = 0; i < dim; i++) {
        free(A[i]);
    }
    free(A);
    free(B);
    free(X);

    return 0;
}
